layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    crop_size: 227
    scale: 0.00390625
    mean_file: "/home/cai/dataset/foodIngredients-70/data/foodIngredients-70_mean_train_256_f1_more.binaryproto"
  }
  data_param {
    source: "/home/cai/dataset/foodIngredients-70/example/foodIngredients-70_train_lmdb_256_f1_more"
    batch_size: 128
    backend: LMDB
  }
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    mirror: false
    crop_size: 227
    # crop_width:  71
    # crop_height: 28
    scale: 0.00390625
    mean_file: "/home/cai/dataset/foodIngredients-70/data/foodIngredients-70_mean_val_256_f1.binaryproto"
  }
  data_param {
    source: "/home/cai/dataset/foodIngredients-70/example/foodIngredients-70_val_lmdb_256_f1"
    batch_size: 50
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    pad: 0
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
  # param {
  #   lr_mult: 1
  #   decay_mult: 0
  # }
  # prelu_param {
  #   filler: {
  #     value: 0.33 
  #   }
  #   channel_shared: false
  # }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
  # param {
  #   lr_mult: 1
  #   decay_mult: 0
  # }
  # prelu_param {
  #   filler: {
  #     value: 0.33 
  #   }
  #   channel_shared: false
  # }
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
  # param {
  #   lr_mult: 1
  #   decay_mult: 0
  # }
  # prelu_param {
  #   filler: {
  #     value: 0.33 
  #   }
  #   channel_shared: false
  # }
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
  # param {
  #   lr_mult: 1
  #   decay_mult: 0
  # }
  # prelu_param {
  #   filler: {
  #     value: 0.33 
  #   }
  #   channel_shared: false
  # }
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 192
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
  # param {
  #   lr_mult: 1
  #   decay_mult: 0
  # }
  # prelu_param {
  #   filler: {
  #     value: 0.33 
  #   }
  #   channel_shared: false
  # }
}
layer {
  name: "pool5"
  type: "Pooling"
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool5"
  top: "ip1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu_ip1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "drop1"
  type: "Dropout"
  bottom: "ip1"
  top: "ip1"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "xavier"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu_ip2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "drop2"
  type: "Dropout"
  bottom: "ip2"
  top: "ip2"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 70
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "ip1_1"
  type: "InnerProduct"
  bottom: "pool5"
  top: "ip1_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 1024
    weight_filler {
      type: "xavier"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu_ip1_1"
  type: "ReLU"
  bottom: "ip1_1"
  top: "ip1_1"
}
# layer {
#   name: "drop1_1"
#   type: "Dropout"
#   bottom: "ip1_1"
#   top: "ip1_1"
#   dropout_param {
#     dropout_ratio: 0.5
#   }
# }
layer {
  name: "ip2_1"
  type: "InnerProduct"
  bottom: "ip1_1"
  top: "ip2_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 2048
    weight_filler {
      type: "xavier"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu_ip2_1"
  type: "ReLU"
  bottom: "ip2_1"
  top: "ip2_1"
}
# layer {
#   name: "drop2_1"
#   type: "Dropout"
#   bottom: "ip2_1"
#   top: "ip2_1"
#   dropout_param {
#     dropout_ratio: 0.5
#   }
# }
layer {
  name: "ip3_1"
  type: "InnerProduct"
  bottom: "ip2_1"
  top: "ip3_1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 70
    weight_filler {
      type: "xavier"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  name: "center_loss"
  type: "CenterLoss"
  bottom: "ip3_1"
  bottom: "label"
  top: "center_loss"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  center_loss_param {
    num_output: 70
    center_filler {
      type: "xavier"
    }
  }
  loss_weight: 0.003
}
layer {
  name: "concat"
  bottom: "ip3"
  bottom: "ip3_1"
  type: "Concat"
  top: "concat"
  concat_param {
    concat_dim: 1
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "concat"
  bottom: "label"
  top: "loss"
}
# layer{
#   name: "eltwise_loss"
#   type: "Eltwise"
#   bottom: "loss"
#   bottom: "center_loss"
#   top: "eltwise_loss"
#   eltwise_param {
#     operation: SUM
#     coeff: 0.8 
#     coeff: 0.2
#   }
# }
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}


